/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Marlabs.Main;

import Marlabs.Constants.Constants;
import Marlabs.Core.Xls_Reader;
import java.awt.Toolkit;
import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListModel;

/**
 *
 * @author govardhanar
 */
public class FrameTestCases extends javax.swing.JFrame {

    /**
     * Creates new form FrameModules
     */
    public FrameTestCases() {
        initComponents();
        SetIcon();
        ResetRightList();
    }
    
    public FrameTestCases(String suite, String module, String submodule) {
        initComponents();
        SetIcon();
        ResetRightList();
    }
    
    static DefaultListModel sort(DefaultListModel dlm) { 
        Object [] dlma = dlm.toArray();    
        Arrays.sort(dlma);   
        dlm.clear();     
        for (Object x : dlma)
            dlm.addElement(x);      
        
        return dlm;
    }
    
    public void LoadTestCases(Object suite, Object module, Object submodule) {
        ResetRightList(); 
        if(suite.equals("--Select--") || module.equals("--Select--") || submodule.equals("--Select--"))
            return;

        String suiteName = "";
        String path = "";
        String sheetName = "";

        if(suite.equals("Regression")){
             suiteName = Constants.RegressionSuiteName;
             path = Constants.RegressionTestSuite;
             sheetName = "Submodule-" + module;
        }
        else if(suite.equals("Smoke")){
             suiteName = Constants.RegressionSuiteName;
             path = Constants.RegressionTestSuite;
             sheetName = "Submodule-" + module;
        }

        Xls_Reader excel = new Xls_Reader(path);
        int cellId = 1;
        String cellData = "";

        int moduleColumn = 0;

        while(true)
        {
            cellData = (String) excel.getCellData(sheetName, moduleColumn, cellId);
            if(cellData.equals(submodule))
                break; 
            else
                moduleColumn++;
        }

        cellId = 2;    
        cellData = "";
        DefaultListModel mTestCases = new DefaultListModel();

        while(true)
        {
           cellData = (String) excel.getCellData(sheetName, moduleColumn, cellId);

           if(cellData.trim().length() > 0)
           {
               mTestCases.addElement(cellData);
               cellId++;
           }
           else
               break;
        }

         lstTestCasesLeft.setModel(sort(mTestCases));
    }
    
    private void SetIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/logo_16x16.png"))); 
    }
       
    private void ResetRightList() {
         DefaultListModel mTestCases = new DefaultListModel();
         lstTestCasesRight.setModel(mTestCases);
    }
    
  
    
    private void MoveListItems(javax.swing.JList from, javax.swing.JList to) {
        //get access through interface ListModel to left and Right JLists's models
        ListModel leftLM = from.getModel();        
        ListModel rightLM = to.getModel();
        
        DefaultListModel leftDLM = new DefaultListModel();  
        DefaultListModel rightDLM = new DefaultListModel(); 
        
        //copy existing items to DefaultListModel
        for(int i=0;i<leftLM.getSize();i++){
            if(lstTestCasesLeft.isSelectedIndex(i)){  
                     rightDLM.addElement(leftLM.getElementAt(i));
            }//if
            else{
                leftDLM.addElement(leftLM.getElementAt(i)); 
            }//else
        }//for
        from.setModel(leftDLM);
        System.out.println(leftDLM);
        
        for(int i=0;i<rightLM.getSize();i++){   
           rightDLM.addElement(rightLM.getElementAt(i));
        }
        
        from.setModel(leftDLM);
        to.setModel(rightDLM);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        lstTestCasesLeft = new javax.swing.JList();
        btnTCMoveRight = new javax.swing.JButton();
        btnTCMoveLeft = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstTestCasesRight = new javax.swing.JList();
        btnTCOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Test Cases");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lstTestCasesLeft.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstTestCasesLeftMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstTestCasesLeft);

        btnTCMoveRight.setText(">>");
        btnTCMoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTCMoveRightActionPerformed(evt);
            }
        });

        btnTCMoveLeft.setText("<<");
        btnTCMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTCMoveLeftActionPerformed(evt);
            }
        });

        lstTestCasesRight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstTestCasesRightMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstTestCasesRight);

        btnTCOk.setText("Ok");
        btnTCOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTCOkActionPerformed(evt);
            }
        });

        jLabel1.setText("Available Cases");

        jLabel2.setText("Selected Cases");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTCOk))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnTCMoveRight)
                                    .addComponent(btnTCMoveLeft))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(btnTCMoveRight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTCMoveLeft))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btnTCOk)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTCOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTCOkActionPerformed
    	
    	ListModel rightLM = lstTestCasesRight.getModel();    	
    	
    	for(int i=0;i<rightLM.getSize();i++){             
    		Constants.FlaggedTCs.add(rightLM.getElementAt(i).toString());          
         }  	   	
    	
        this.setVisible(false);
    }//GEN-LAST:event_btnTCOkActionPerformed

    private void btnTCMoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTCMoveRightActionPerformed
      
        ListModel leftLM = lstTestCasesLeft.getModel();        
        ListModel rightLM = lstTestCasesRight.getModel();
        
        DefaultListModel leftDLM = new DefaultListModel();  
        DefaultListModel rightDLM = new DefaultListModel(); 
        
        for(int i=0;i<leftLM.getSize();i++){
            if(lstTestCasesLeft.isSelectedIndex(i)){  
                     rightDLM.addElement(leftLM.getElementAt(i));
            }//if
            else{
                leftDLM.addElement(leftLM.getElementAt(i)); 
            }//else
        }//for
        lstTestCasesLeft.setModel(leftDLM);
        System.out.println(sort(leftDLM));
        
        for(int i=0;i<rightLM.getSize();i++){   
           rightDLM.addElement(rightLM.getElementAt(i));
        }

        lstTestCasesRight.setModel( sort(rightDLM));
    
        lstTestCasesLeft.clearSelection();
        lstTestCasesRight.clearSelection();
    }//GEN-LAST:event_btnTCMoveRightActionPerformed

    private void btnTCMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTCMoveLeftActionPerformed
      
        ListModel leftLM = lstTestCasesLeft.getModel();        
        ListModel rightLM = lstTestCasesRight.getModel();
        
        DefaultListModel leftDLM = new DefaultListModel();  
        DefaultListModel rightDLM = new DefaultListModel(); 
        
        for(int i=0;i<rightLM.getSize();i++){
            if(lstTestCasesRight.isSelectedIndex(i)){  
                     leftDLM.addElement(rightLM.getElementAt(i));
            }//if
            else{
                rightDLM.addElement(rightLM.getElementAt(i)); 
            }//else
        }//for

        lstTestCasesRight.setModel(sort(rightDLM));
        
        for(int i=0;i<leftLM.getSize();i++){   
           leftDLM.addElement(leftLM.getElementAt(i));
        }
        
        lstTestCasesLeft.setModel(sort(leftDLM));
        
        lstTestCasesLeft.clearSelection();
        lstTestCasesRight.clearSelection();
    }//GEN-LAST:event_btnTCMoveLeftActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void lstTestCasesLeftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstTestCasesLeftMouseClicked
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = list.locationToIndex(evt.getPoint());
            if (index >= 0) {
                Object selItem = list.getModel().getElementAt(index);
                ((DefaultListModel) lstTestCasesLeft.getModel()).removeElement(selItem);
                ((DefaultListModel) lstTestCasesRight.getModel()).addElement(selItem);
            }
            
            lstTestCasesRight.setModel(sort( (DefaultListModel) lstTestCasesRight.getModel()));
        }
    }//GEN-LAST:event_lstTestCasesLeftMouseClicked

    private void lstTestCasesRightMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstTestCasesRightMouseClicked
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = list.locationToIndex(evt.getPoint());
            if (index >= 0) {
                Object selItem = list.getModel().getElementAt(index);
                ((DefaultListModel) lstTestCasesRight.getModel()).removeElement(selItem);
                ((DefaultListModel) lstTestCasesLeft.getModel()).addElement(selItem);
             }
            
             lstTestCasesLeft.setModel(sort( (DefaultListModel) lstTestCasesLeft.getModel()));
        }
    }//GEN-LAST:event_lstTestCasesRightMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameTestCases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameTestCases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameTestCases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameTestCases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameTestCases().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTCMoveLeft;
    private javax.swing.JButton btnTCMoveRight;
    private javax.swing.JButton btnTCOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstTestCasesLeft;
    private javax.swing.JList lstTestCasesRight;
    // End of variables declaration//GEN-END:variables
}
